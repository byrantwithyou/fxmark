diff --git a/bin/run-fxmark.py b/bin/run-fxmark.py
index 77f68b4..2334d0c 100755
--- a/bin/run-fxmark.py
+++ b/bin/run-fxmark.py
@@ -28,7 +28,7 @@ class Runner(object):
     NVMEDEV = "/dev/nvme0n1pX"
     HDDDEV  = "/dev/sdX"
     SSDDEV  = "/dev/sdY"
-    PMEMDEV = "/dev/pmem7"
+    PMEMDEV = "/dev/pmem0"
 
     # test core granularity
     CORE_FINE_GRAIN   = 0
@@ -150,8 +150,6 @@ class Runner(object):
         self.ncores      = self.get_ncores()
         self.test_root   = os.path.normpath(
             os.path.join(CUR_DIR, self.ROOT_NAME))
-        if self.FILTER[1] == "splitfs":
-            self.test_root="/mnt/pmem_emul"
         self.fxmark_path = os.path.normpath(
             os.path.join(CUR_DIR, self.FXMARK_NAME))
         self.filebench_path = os.path.normpath(
@@ -343,8 +341,6 @@ class Runner(object):
         return True
     
     def mount_splitfs(self, media, fs, mnt_path):
-        if mnt_path != "/mnt/pmem_emul":
-            return False
         if not self.mount_anyfs(media, "ext4", mnt_path):
             return False
         return True    
@@ -439,11 +435,28 @@ class Runner(object):
                             if self._match_config(self.FILTER, \
                                                   (media, fs, bench, str(ncore), dio)):
                                 yield(media, fs, bench, ncore, dio)
+    def fxmark_clean_env(self):
+        env = ' '.join(["PERFMON_LEVEL=%s" % self.PERFMON_LEVEL,
+                        "PERFMON_LDIR=%s"  % self.log_dir,
+                        "PERFMON_LFILE=%s" % self.perfmon_log])
+
+        return env
+
 
-    def fxmark_env(self):
+    def fxmark_run_env(self, fs):
         env = ' '.join(["PERFMON_LEVEL=%s" % self.PERFMON_LEVEL,
                         "PERFMON_LDIR=%s"  % self.log_dir,
                         "PERFMON_LFILE=%s" % self.perfmon_log])
+
+        if fs == "splitfs":
+            #FIXME: add check to verify these files exist
+            fs_env = ' '.join(["LD_LIBRARY_PATH=/home/diyu/SplitFS/splitfs/",
+                            "NVP_TREE_FILE=/home/diyu/SplitFS/splitfs/bin/"
+                            "nvp_nvp.tree",
+                            "LD_PRELOAD=/home/diyu/SplitFS/splitfs/libnvp.so"])
+
+            env = env + ' ' + fs_env
+
         return env
 
     def get_bin_type(self, bench):
@@ -467,7 +480,7 @@ class Runner(object):
             else: 
                 print("# INFO: DirectIO Enabled")
 
-        cmd = ' '.join([self.fxmark_env(),
+        cmd = ' '.join([self.fxmark_run_env(fs),
                         bin,
                         "--type", type,
                         "--ncore", str(ncore),
@@ -484,7 +497,7 @@ class Runner(object):
                 self.log(l.decode("utf-8").strip())
 
     def fxmark_cleanup(self):
-        cmd = ' '.join([self.fxmark_env(),
+        cmd = ' '.join([self.fxmark_clean_env(),
                         "%s; rm -f %s/*.pm" % (self.perfmon_stop, self.log_dir)])
         self.exec_cmd(cmd)
         self.exec_cmd("sudo sh -c \"echo 0 >/proc/sys/kernel/lock_stat\"",
diff --git a/scripts/splitfs.sh b/scripts/splitfs.sh
deleted file mode 100755
index 83f57f4..0000000
--- a/scripts/splitfs.sh
+++ /dev/null
@@ -1,4 +0,0 @@
-#!/usr/bin/env bash
-rm -rf /mnt/pmem_emul/
-mkdir -p /mnt/pmem_emul
-export LD_PRELOAD=/home/yunxin/SplitFS/splitfs/libnvp.so
